{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","Component","constructor","props","super","this","editItem","index","todos","state","list","editedTodo","prompt","trim","updatedTodos","value","setState","userInput","updateInput","addItem","id","Math","random","push","deleteItem","key","updateList","filter","item","render","React","createElement","Container","Row","style","display","justifyContent","fontSize","fontWeight","Col","md","span","offset","InputGroup","className","FormControl","placeholde","size","onChange","target","aria-label","aria-describedby","Button","variant","onClick","ListGroup","map","Item","action","marginRight","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"kQAuKeA,MAlIf,cAAkBC,YACjBC,YAAYC,GACXC,MAAMD,GACNE,KAyCCC,SAAYC,KACT,MAAMC,EAAQ,IAAIH,KAAKI,MAAMC,MACvBC,EAAaC,OAAO,kBAC1B,GAAmB,OAAfD,GAA6C,KAAtBA,EAAWE,OAAe,CACnD,IAAIC,EAAe,IAAIN,GACvBM,EAAaP,GAAOQ,MAAOJ,EAC3BN,KAAKW,SAAS,CACZN,KAAMI,OA/CdT,KAAKI,MAAQ,CACZQ,UAAW,GACXP,KAAM,IAIRQ,YAAYH,GACXV,KAAKW,SAAU,CACdC,UAAWF,IAIbI,UACC,GAA6B,KAAzBd,KAAKI,MAAMQ,UAAkB,CAChC,MAAMA,EAAY,CAEjBG,GAAIC,KAAKC,SAETP,MAAOV,KAAKI,MAAMQ,WAGbP,EAAO,IAAIL,KAAKI,MAAMC,MAC5BA,EAAKa,KAAKN,GAEVZ,KAAKW,SAAS,CACbN,OACAO,UAAW,MAKdO,WAAWC,GACV,MAEMC,EAFO,IAAIrB,KAAKI,MAAMC,MAEJiB,OAAQC,GAASA,EAAKR,KAAOK,GAErDpB,KAAKW,SAAS,CACbN,KAAMgB,IAcRG,SACC,OACCC,IAAAC,cAACC,IAAS,KACTF,IAAAC,cAACE,IAAG,CACJC,MAAO,CACNC,QAAS,OACTC,eAAgB,SAChBC,SAAU,OACVC,WAAY,WAEZ,aAGDR,IAAAC,cAAA,WACAD,IAAAC,cAACE,IAAG,KACHH,IAAAC,cAACQ,IAAG,CAACC,GAAI,CAAEC,KAAMpC,KAAKwB,OAAQa,OAAQ,IACrCZ,IAAAC,cAACY,IAAU,CAACC,UAAU,QACrBd,IAAAC,cAACc,IAAW,CACXC,WAAW,iBACXC,KAAK,KACLhC,MAAOV,KAAKI,MAAMQ,UAClB+B,SAAWpB,GAASvB,KAAKa,YAAYU,EAAKqB,OAAOlC,OACjDmC,aAAW,gBACXC,mBAAiB,gBAGlBrB,IAAAC,cAACY,IAAU,KACVb,IAAAC,cAACqB,IAAM,CACNC,QAAQ,OACRT,UAAU,OACVU,QAASA,IAAMjD,KAAKc,WACpB,WAOHW,IAAAC,cAACE,IAAG,KACHH,IAAAC,cAACQ,IAAG,CAACC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IAC3BZ,IAAAC,cAACwB,IAAS,KAERlD,KAAKI,MAAMC,KAAK8C,IAAI,CAAC5B,EAAMrB,IAE1BuB,IAAAC,cAAA,OAAKN,IAAKlB,GACTuB,IAAAC,cAACwB,IAAUE,KAAI,CACfJ,QAAQ,OACRK,QAAM,EACNxB,MAAO,CAACC,QAAQ,OACdC,eAAgB,kBAGjBR,EAAKb,MACNe,IAAAC,cAAA,YACAD,IAAAC,cAACqB,IAAM,CAAClB,MAAO,CAACyB,YAAY,QAC5BN,QAAQ,QACRC,QAASA,IAAMjD,KAAKmB,WAAWI,EAAKR,KAAK,UAGzCU,IAAAC,cAACqB,IAAM,CAACC,QAAQ,QACfC,QAASA,IAAMjD,KAAKC,SAASC,IAAQ,kBC5InCqD,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpD/C,OACHC,IAAAC,cAACD,IAAM+C,WAAU,KACf/C,IAAAC,cAAC/B,EAAG,QAOR4D","file":"static/js/main.3f233337.chunk.js","sourcesContent":["// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n// export default App;\n// import { Form } from \"react-bootstrap\";\n\nimport\tReact, { Component } from \"react\";\n\nimport\t\"bootstrap/dist/css/bootstrap.css\";\nimport\tContainer from  \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/esm/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport { ListGroup } from \"react-bootstrap\";\n\nclass\tApp extends Component {\n\tconstructor(props)\t{\n\t\tsuper(props);\n\t\t//setting up state\n\t\tthis.state = {\n\t\t\tuserInput: \"\",\n\t\t\tlist: [],\n\t\t};\n\t}\n\t//set a user input value\n\tupdateInput(value)\t{\n\t\tthis.setState ({\n\t\t\tuserInput: value,\n\t\t});\n\t}\n\t//add item if user input in not empty\n\taddItem(){\n\t\tif (this.state.userInput !== \"\") {\n\t\t\tconst userInput = {\n\t\t\t\t//add a random id which is used to delete\n\t\t\t\tid: Math.random(),\n\t\t\t\t//add a user value to list\n\t\t\t\tvalue: this.state.userInput,\n\t\t\t};\n\t\t\t//update list\n\t\t\tconst list = [...this.state.list];\n\t\t\tlist.push(userInput);\n\t\t\t//reset stat\n\t\t\tthis.setState({\n\t\t\t\tlist,\n\t\t\t\tuserInput: \"\",\n\t\t\t});\n\t\t}\n\t}\n\t//Function to delete item from list use id to delete\n\tdeleteItem(key)\t{\n\t\tconst list = [...this.state.list];\n\t\t//filter values and leave which we need to delete\n\t\tconst\tupdateList = list.filter((item) => item.id !== key);\n\t\t//update list in state\n\t\tthis.setState({\n\t\t\tlist: updateList,\n\t\t});\n\t}\n\t  editItem = (index) => {\n      const todos = [...this.state.list];\n      const editedTodo = prompt('Edit the todo:');\n      if (editedTodo !== null && editedTodo.trim() !== '') {\n        let updatedTodos = [...todos]\n        updatedTodos[index].value= editedTodo\n        this.setState({\n          list: updatedTodos,\n      });\n      }\n    }\n\trender() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Row\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\tfontSize: \"3rem\",\n\t\t\t\t\tfontWeight: \"bolder\",\n\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tTODO LIST\n\t\t\t\t</Row>\n\t\t\t\t<hr />\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={{ span: this.render, offset: 4}}>\n\t\t\t\t\t\t<InputGroup className=\"mb-3\">\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\tplaceholde=\"add item . . .\"\n\t\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t\t\tvalue={this.state.userInput}\n\t\t\t\t\t\t\t\tonChange={(item) => this.updateInput(item.target.value)}\n\t\t\t\t\t\t\t\taria-label=\"add something\"\n\t\t\t\t\t\t\t\taria-describedby=\"describedby\"\n\t\t\t\t\t\t\t\t// aria-describedby=\"description\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"dark\"\n\t\t\t\t\t\t\t\t\tclassName=\"mt-2\"\n\t\t\t\t\t\t\t\t\tonClick={() => this.addItem()}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tADD\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col md={{ span: 5, offset: 4 }}>\n\t\t\t\t\t\t\t\t<ListGroup>\n\t\t\t\t\t\t\t\t\t{/*map over and print items */}\n\t\t\t\t\t\t\t\t\t{this.state.list.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<div key={index} >\n\t\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"dark\"\n\t\t\t\t\t\t\t\t\t\t\t\taction\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{display:\"flex\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{item.value}\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button style={{marginRight:\"10px\"}}\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"light\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.deleteItem(item.id)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"light\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.editItem(index)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>\n\t\t);\n\t}\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}